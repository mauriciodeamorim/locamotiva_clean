#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Running.Business
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\ARQUIVOS DE PROGRAMAS\\MICROSOFT SQL SERVER\\MSSQL.1\\MSSQL\\DATA\\CORRIDAS.MDF")]
	public partial class RunningDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAtleta(Atleta instance);
    partial void UpdateAtleta(Atleta instance);
    partial void DeleteAtleta(Atleta instance);
    partial void InsertProva(Prova instance);
    partial void UpdateProva(Prova instance);
    partial void DeleteProva(Prova instance);
    partial void InsertResultado(Resultado instance);
    partial void UpdateResultado(Resultado instance);
    partial void DeleteResultado(Resultado instance);
    partial void InsertTempo(Tempo instance);
    partial void UpdateTempo(Tempo instance);
    partial void DeleteTempo(Tempo instance);
    #endregion
		
		public RunningDataContext() : 
				base(global::Running.Business.Properties.Settings.Default.AntigaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RunningDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RunningDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RunningDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RunningDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Atleta> Atletas
		{
			get
			{
				return this.GetTable<Atleta>();
			}
		}
		
		public System.Data.Linq.Table<Prova> Provas
		{
			get
			{
				return this.GetTable<Prova>();
			}
		}
		
		public System.Data.Linq.Table<Resultado> Resultados
		{
			get
			{
				return this.GetTable<Resultado>();
			}
		}
		
		public System.Data.Linq.Table<Tempo> Tempos
		{
			get
			{
				return this.GetTable<Tempo>();
			}
		}
	}
	
	[Table(Name="dbo.run_Atleta")]
	public partial class Atleta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAtleta;
		
		private string _Nome;
		
		private string _Apelido;
		
		private char _Sexo;
		
		private System.Nullable<System.DateTime> _DtNascimento;
		
		private string _Fone;
		
		private string _CPF;
		
		private string _Celular;
		
		private EntitySet<Resultado> _Resultados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAtletaChanging(int value);
    partial void OnIdAtletaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnApelidoChanging(string value);
    partial void OnApelidoChanged();
    partial void OnSexoChanging(char value);
    partial void OnSexoChanged();
    partial void OnDtNascimentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDtNascimentoChanged();
    partial void OnFoneChanging(string value);
    partial void OnFoneChanged();
    partial void OnCPFChanging(string value);
    partial void OnCPFChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    #endregion
		
		public Atleta()
		{
			this._Resultados = new EntitySet<Resultado>(new Action<Resultado>(this.attach_Resultados), new Action<Resultado>(this.detach_Resultados));
			OnCreated();
		}
		
		[Column(Storage="_IdAtleta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAtleta
		{
			get
			{
				return this._IdAtleta;
			}
			set
			{
				if ((this._IdAtleta != value))
				{
					this.OnIdAtletaChanging(value);
					this.SendPropertyChanging();
					this._IdAtleta = value;
					this.SendPropertyChanged("IdAtleta");
					this.OnIdAtletaChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Apelido", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Apelido
		{
			get
			{
				return this._Apelido;
			}
			set
			{
				if ((this._Apelido != value))
				{
					this.OnApelidoChanging(value);
					this.SendPropertyChanging();
					this._Apelido = value;
					this.SendPropertyChanged("Apelido");
					this.OnApelidoChanged();
				}
			}
		}
		
		[Column(Storage="_Sexo", DbType="NChar(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[Column(Storage="_DtNascimento", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DtNascimento
		{
			get
			{
				return this._DtNascimento;
			}
			set
			{
				if ((this._DtNascimento != value))
				{
					this.OnDtNascimentoChanging(value);
					this.SendPropertyChanging();
					this._DtNascimento = value;
					this.SendPropertyChanged("DtNascimento");
					this.OnDtNascimentoChanged();
				}
			}
		}
		
		[Column(Storage="_Fone", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string Fone
		{
			get
			{
				return this._Fone;
			}
			set
			{
				if ((this._Fone != value))
				{
					this.OnFoneChanging(value);
					this.SendPropertyChanging();
					this._Fone = value;
					this.SendPropertyChanged("Fone");
					this.OnFoneChanged();
				}
			}
		}
		
		[Column(Storage="_CPF", DbType="VarChar(11)", UpdateCheck=UpdateCheck.Never)]
		public string CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this.OnCPFChanging(value);
					this.SendPropertyChanging();
					this._CPF = value;
					this.SendPropertyChanged("CPF");
					this.OnCPFChanged();
				}
			}
		}
		
		[Column(Storage="_Celular", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[Association(Name="Atleta_Resultado", Storage="_Resultados", OtherKey="IdAtleta")]
		public EntitySet<Resultado> Resultados
		{
			get
			{
				return this._Resultados;
			}
			set
			{
				this._Resultados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resultados(Resultado entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = this;
		}
		
		private void detach_Resultados(Resultado entity)
		{
			this.SendPropertyChanging();
			entity.Atleta = null;
		}
	}
	
	[Table(Name="dbo.run_Prova")]
	public partial class Prova : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProva;
		
		private string _Nome;
		
		private string _Etapa;
		
		private System.Nullable<System.DateTime> _Data;
		
		private string _Local;
		
		private string _Organizacao;
		
		private string _SiteOficial;
		
		private string _Distancia;
		
		private string _Obs;
		
		private EntitySet<Resultado> _Resultados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProvaChanging(int value);
    partial void OnIdProvaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEtapaChanging(string value);
    partial void OnEtapaChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnLocalChanging(string value);
    partial void OnLocalChanged();
    partial void OnOrganizacaoChanging(string value);
    partial void OnOrganizacaoChanged();
    partial void OnSiteOficialChanging(string value);
    partial void OnSiteOficialChanged();
    partial void OnDistanciaChanging(string value);
    partial void OnDistanciaChanged();
    partial void OnObsChanging(string value);
    partial void OnObsChanged();
    #endregion
		
		public Prova()
		{
			this._Resultados = new EntitySet<Resultado>(new Action<Resultado>(this.attach_Resultados), new Action<Resultado>(this.detach_Resultados));
			OnCreated();
		}
		
		[Column(Storage="_IdProva", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProva
		{
			get
			{
				return this._IdProva;
			}
			set
			{
				if ((this._IdProva != value))
				{
					this.OnIdProvaChanging(value);
					this.SendPropertyChanging();
					this._IdProva = value;
					this.SendPropertyChanged("IdProva");
					this.OnIdProvaChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Etapa", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Etapa
		{
			get
			{
				return this._Etapa;
			}
			set
			{
				if ((this._Etapa != value))
				{
					this.OnEtapaChanging(value);
					this.SendPropertyChanging();
					this._Etapa = value;
					this.SendPropertyChanged("Etapa");
					this.OnEtapaChanged();
				}
			}
		}
		
		[Column(Storage="_Data", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[Column(Storage="_Local", DbType="VarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Local
		{
			get
			{
				return this._Local;
			}
			set
			{
				if ((this._Local != value))
				{
					this.OnLocalChanging(value);
					this.SendPropertyChanging();
					this._Local = value;
					this.SendPropertyChanged("Local");
					this.OnLocalChanged();
				}
			}
		}
		
		[Column(Storage="_Organizacao", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Organizacao
		{
			get
			{
				return this._Organizacao;
			}
			set
			{
				if ((this._Organizacao != value))
				{
					this.OnOrganizacaoChanging(value);
					this.SendPropertyChanging();
					this._Organizacao = value;
					this.SendPropertyChanged("Organizacao");
					this.OnOrganizacaoChanged();
				}
			}
		}
		
		[Column(Storage="_SiteOficial", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string SiteOficial
		{
			get
			{
				return this._SiteOficial;
			}
			set
			{
				if ((this._SiteOficial != value))
				{
					this.OnSiteOficialChanging(value);
					this.SendPropertyChanging();
					this._SiteOficial = value;
					this.SendPropertyChanged("SiteOficial");
					this.OnSiteOficialChanged();
				}
			}
		}
		
		[Column(Storage="_Distancia", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Distancia
		{
			get
			{
				return this._Distancia;
			}
			set
			{
				if ((this._Distancia != value))
				{
					this.OnDistanciaChanging(value);
					this.SendPropertyChanging();
					this._Distancia = value;
					this.SendPropertyChanged("Distancia");
					this.OnDistanciaChanged();
				}
			}
		}
		
		[Column(Storage="_Obs", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Obs
		{
			get
			{
				return this._Obs;
			}
			set
			{
				if ((this._Obs != value))
				{
					this.OnObsChanging(value);
					this.SendPropertyChanging();
					this._Obs = value;
					this.SendPropertyChanged("Obs");
					this.OnObsChanged();
				}
			}
		}
		
		[Association(Name="Prova_Resultado", Storage="_Resultados", OtherKey="IdProva")]
		public EntitySet<Resultado> Resultados
		{
			get
			{
				return this._Resultados;
			}
			set
			{
				this._Resultados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resultados(Resultado entity)
		{
			this.SendPropertyChanging();
			entity.Prova = this;
		}
		
		private void detach_Resultados(Resultado entity)
		{
			this.SendPropertyChanging();
			entity.Prova = null;
		}
	}
	
	[Table(Name="dbo.run_Resultado")]
	public partial class Resultado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdResultado;
		
		private string _Numero;
		
		private string _FaixaEtaria;
		
		private string _Equipe;
		
		private System.Nullable<System.DateTime> _TempoLiq;
		
		private System.Nullable<System.DateTime> _TempoOfic;
		
		private System.Nullable<int> _ClassGeral;
		
		private System.Nullable<int> _ClassSexo;
		
		private System.Nullable<int> _ClassFaixa;
		
		private System.Nullable<int> _TotalClassGeral;
		
		private System.Nullable<int> _TotalClassSexo;
		
		private System.Nullable<int> _TotalClassFaixa;
		
		private System.Nullable<System.DateTime> _Ritmo;
		
		private string _Distancia;
		
		private string _NoLugarDe;
		
		private bool _FezInscricao;
		
		private int _IdAtleta;
		
		private int _IdProva;
		
		private EntitySet<Tempo> _Tempos;
		
		private EntityRef<Atleta> _Atleta;
		
		private EntityRef<Prova> _Prova;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdResultadoChanging(int value);
    partial void OnIdResultadoChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnFaixaEtariaChanging(string value);
    partial void OnFaixaEtariaChanged();
    partial void OnEquipeChanging(string value);
    partial void OnEquipeChanged();
    partial void OnTempoLiqChanging(System.Nullable<System.DateTime> value);
    partial void OnTempoLiqChanged();
    partial void OnTempoOficChanging(System.Nullable<System.DateTime> value);
    partial void OnTempoOficChanged();
    partial void OnClassGeralChanging(System.Nullable<int> value);
    partial void OnClassGeralChanged();
    partial void OnClassSexoChanging(System.Nullable<int> value);
    partial void OnClassSexoChanged();
    partial void OnClassFaixaChanging(System.Nullable<int> value);
    partial void OnClassFaixaChanged();
    partial void OnTotalClassGeralChanging(System.Nullable<int> value);
    partial void OnTotalClassGeralChanged();
    partial void OnTotalClassSexoChanging(System.Nullable<int> value);
    partial void OnTotalClassSexoChanged();
    partial void OnTotalClassFaixaChanging(System.Nullable<int> value);
    partial void OnTotalClassFaixaChanged();
    partial void OnRitmoChanging(System.Nullable<System.DateTime> value);
    partial void OnRitmoChanged();
    partial void OnDistanciaChanging(string value);
    partial void OnDistanciaChanged();
    partial void OnNoLugarDeChanging(string value);
    partial void OnNoLugarDeChanged();
    partial void OnFezInscricaoChanging(bool value);
    partial void OnFezInscricaoChanged();
    partial void OnIdAtletaChanging(int value);
    partial void OnIdAtletaChanged();
    partial void OnIdProvaChanging(int value);
    partial void OnIdProvaChanged();
    #endregion
		
		public Resultado()
		{
			this._Tempos = new EntitySet<Tempo>(new Action<Tempo>(this.attach_Tempos), new Action<Tempo>(this.detach_Tempos));
			this._Atleta = default(EntityRef<Atleta>);
			this._Prova = default(EntityRef<Prova>);
			OnCreated();
		}
		
		[Column(Storage="_IdResultado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdResultado
		{
			get
			{
				return this._IdResultado;
			}
			set
			{
				if ((this._IdResultado != value))
				{
					this.OnIdResultadoChanging(value);
					this.SendPropertyChanging();
					this._IdResultado = value;
					this.SendPropertyChanged("IdResultado");
					this.OnIdResultadoChanged();
				}
			}
		}
		
		[Column(Storage="_Numero", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[Column(Storage="_FaixaEtaria", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string FaixaEtaria
		{
			get
			{
				return this._FaixaEtaria;
			}
			set
			{
				if ((this._FaixaEtaria != value))
				{
					this.OnFaixaEtariaChanging(value);
					this.SendPropertyChanging();
					this._FaixaEtaria = value;
					this.SendPropertyChanged("FaixaEtaria");
					this.OnFaixaEtariaChanged();
				}
			}
		}
		
		[Column(Storage="_Equipe", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Equipe
		{
			get
			{
				return this._Equipe;
			}
			set
			{
				if ((this._Equipe != value))
				{
					this.OnEquipeChanging(value);
					this.SendPropertyChanging();
					this._Equipe = value;
					this.SendPropertyChanged("Equipe");
					this.OnEquipeChanged();
				}
			}
		}
		
		[Column(Storage="_TempoLiq", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TempoLiq
		{
			get
			{
				return this._TempoLiq;
			}
			set
			{
				if ((this._TempoLiq != value))
				{
					this.OnTempoLiqChanging(value);
					this.SendPropertyChanging();
					this._TempoLiq = value;
					this.SendPropertyChanged("TempoLiq");
					this.OnTempoLiqChanged();
				}
			}
		}
		
		[Column(Storage="_TempoOfic", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TempoOfic
		{
			get
			{
				return this._TempoOfic;
			}
			set
			{
				if ((this._TempoOfic != value))
				{
					this.OnTempoOficChanging(value);
					this.SendPropertyChanging();
					this._TempoOfic = value;
					this.SendPropertyChanged("TempoOfic");
					this.OnTempoOficChanged();
				}
			}
		}
		
		[Column(Storage="_ClassGeral", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ClassGeral
		{
			get
			{
				return this._ClassGeral;
			}
			set
			{
				if ((this._ClassGeral != value))
				{
					this.OnClassGeralChanging(value);
					this.SendPropertyChanging();
					this._ClassGeral = value;
					this.SendPropertyChanged("ClassGeral");
					this.OnClassGeralChanged();
				}
			}
		}
		
		[Column(Storage="_ClassSexo", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ClassSexo
		{
			get
			{
				return this._ClassSexo;
			}
			set
			{
				if ((this._ClassSexo != value))
				{
					this.OnClassSexoChanging(value);
					this.SendPropertyChanging();
					this._ClassSexo = value;
					this.SendPropertyChanged("ClassSexo");
					this.OnClassSexoChanged();
				}
			}
		}
		
		[Column(Storage="_ClassFaixa", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ClassFaixa
		{
			get
			{
				return this._ClassFaixa;
			}
			set
			{
				if ((this._ClassFaixa != value))
				{
					this.OnClassFaixaChanging(value);
					this.SendPropertyChanging();
					this._ClassFaixa = value;
					this.SendPropertyChanged("ClassFaixa");
					this.OnClassFaixaChanged();
				}
			}
		}
		
		[Column(Storage="_TotalClassGeral", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TotalClassGeral
		{
			get
			{
				return this._TotalClassGeral;
			}
			set
			{
				if ((this._TotalClassGeral != value))
				{
					this.OnTotalClassGeralChanging(value);
					this.SendPropertyChanging();
					this._TotalClassGeral = value;
					this.SendPropertyChanged("TotalClassGeral");
					this.OnTotalClassGeralChanged();
				}
			}
		}
		
		[Column(Storage="_TotalClassSexo", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TotalClassSexo
		{
			get
			{
				return this._TotalClassSexo;
			}
			set
			{
				if ((this._TotalClassSexo != value))
				{
					this.OnTotalClassSexoChanging(value);
					this.SendPropertyChanging();
					this._TotalClassSexo = value;
					this.SendPropertyChanged("TotalClassSexo");
					this.OnTotalClassSexoChanged();
				}
			}
		}
		
		[Column(Storage="_TotalClassFaixa", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TotalClassFaixa
		{
			get
			{
				return this._TotalClassFaixa;
			}
			set
			{
				if ((this._TotalClassFaixa != value))
				{
					this.OnTotalClassFaixaChanging(value);
					this.SendPropertyChanging();
					this._TotalClassFaixa = value;
					this.SendPropertyChanged("TotalClassFaixa");
					this.OnTotalClassFaixaChanged();
				}
			}
		}
		
		[Column(Storage="_Ritmo", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Ritmo
		{
			get
			{
				return this._Ritmo;
			}
			set
			{
				if ((this._Ritmo != value))
				{
					this.OnRitmoChanging(value);
					this.SendPropertyChanging();
					this._Ritmo = value;
					this.SendPropertyChanged("Ritmo");
					this.OnRitmoChanged();
				}
			}
		}
		
		[Column(Storage="_Distancia", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Distancia
		{
			get
			{
				return this._Distancia;
			}
			set
			{
				if ((this._Distancia != value))
				{
					this.OnDistanciaChanging(value);
					this.SendPropertyChanging();
					this._Distancia = value;
					this.SendPropertyChanged("Distancia");
					this.OnDistanciaChanged();
				}
			}
		}
		
		[Column(Storage="_NoLugarDe", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string NoLugarDe
		{
			get
			{
				return this._NoLugarDe;
			}
			set
			{
				if ((this._NoLugarDe != value))
				{
					this.OnNoLugarDeChanging(value);
					this.SendPropertyChanging();
					this._NoLugarDe = value;
					this.SendPropertyChanged("NoLugarDe");
					this.OnNoLugarDeChanged();
				}
			}
		}
		
		[Column(Storage="_FezInscricao", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool FezInscricao
		{
			get
			{
				return this._FezInscricao;
			}
			set
			{
				if ((this._FezInscricao != value))
				{
					this.OnFezInscricaoChanging(value);
					this.SendPropertyChanging();
					this._FezInscricao = value;
					this.SendPropertyChanged("FezInscricao");
					this.OnFezInscricaoChanged();
				}
			}
		}
		
		[Column(Storage="_IdAtleta", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int IdAtleta
		{
			get
			{
				return this._IdAtleta;
			}
			set
			{
				if ((this._IdAtleta != value))
				{
					if (this._Atleta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAtletaChanging(value);
					this.SendPropertyChanging();
					this._IdAtleta = value;
					this.SendPropertyChanged("IdAtleta");
					this.OnIdAtletaChanged();
				}
			}
		}
		
		[Column(Storage="_IdProva", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int IdProva
		{
			get
			{
				return this._IdProva;
			}
			set
			{
				if ((this._IdProva != value))
				{
					if (this._Prova.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProvaChanging(value);
					this.SendPropertyChanging();
					this._IdProva = value;
					this.SendPropertyChanged("IdProva");
					this.OnIdProvaChanged();
				}
			}
		}
		
		[Association(Name="Resultado_Tempo", Storage="_Tempos", OtherKey="IdResultado")]
		public EntitySet<Tempo> Tempos
		{
			get
			{
				return this._Tempos;
			}
			set
			{
				this._Tempos.Assign(value);
			}
		}
		
		[Association(Name="Atleta_Resultado", Storage="_Atleta", ThisKey="IdAtleta", IsForeignKey=true)]
		public Atleta Atleta
		{
			get
			{
				return this._Atleta.Entity;
			}
			set
			{
				Atleta previousValue = this._Atleta.Entity;
				if (((previousValue != value) 
							|| (this._Atleta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Atleta.Entity = null;
						previousValue.Resultados.Remove(this);
					}
					this._Atleta.Entity = value;
					if ((value != null))
					{
						value.Resultados.Add(this);
						this._IdAtleta = value.IdAtleta;
					}
					else
					{
						this._IdAtleta = default(int);
					}
					this.SendPropertyChanged("Atleta");
				}
			}
		}
		
		[Association(Name="Prova_Resultado", Storage="_Prova", ThisKey="IdProva", IsForeignKey=true)]
		public Prova Prova
		{
			get
			{
				return this._Prova.Entity;
			}
			set
			{
				Prova previousValue = this._Prova.Entity;
				if (((previousValue != value) 
							|| (this._Prova.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prova.Entity = null;
						previousValue.Resultados.Remove(this);
					}
					this._Prova.Entity = value;
					if ((value != null))
					{
						value.Resultados.Add(this);
						this._IdProva = value.IdProva;
					}
					else
					{
						this._IdProva = default(int);
					}
					this.SendPropertyChanged("Prova");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tempos(Tempo entity)
		{
			this.SendPropertyChanging();
			entity.Resultado = this;
		}
		
		private void detach_Tempos(Tempo entity)
		{
			this.SendPropertyChanging();
			entity.Resultado = null;
		}
	}
	
	[Table(Name="dbo.run_Tempo")]
	public partial class Tempo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTempo;
		
		private decimal _OrdemKM;
		
		private System.DateTime _Volta;
		
		private string _Terreno;
		
		private string _Altimetria;
		
		private string _Obs;
		
		private int _IdResultado;
		
		private EntityRef<Resultado> _Resultado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTempoChanging(int value);
    partial void OnIdTempoChanged();
    partial void OnOrdemKMChanging(decimal value);
    partial void OnOrdemKMChanged();
    partial void OnVoltaChanging(System.DateTime value);
    partial void OnVoltaChanged();
    partial void OnTerrenoChanging(string value);
    partial void OnTerrenoChanged();
    partial void OnAltimetriaChanging(string value);
    partial void OnAltimetriaChanged();
    partial void OnObsChanging(string value);
    partial void OnObsChanged();
    partial void OnIdResultadoChanging(int value);
    partial void OnIdResultadoChanged();
    #endregion
		
		public Tempo()
		{
			this._Resultado = default(EntityRef<Resultado>);
			OnCreated();
		}
		
		[Column(Storage="_IdTempo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTempo
		{
			get
			{
				return this._IdTempo;
			}
			set
			{
				if ((this._IdTempo != value))
				{
					this.OnIdTempoChanging(value);
					this.SendPropertyChanging();
					this._IdTempo = value;
					this.SendPropertyChanged("IdTempo");
					this.OnIdTempoChanged();
				}
			}
		}
		
		[Column(Storage="_OrdemKM", DbType="Decimal(5,0) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal OrdemKM
		{
			get
			{
				return this._OrdemKM;
			}
			set
			{
				if ((this._OrdemKM != value))
				{
					this.OnOrdemKMChanging(value);
					this.SendPropertyChanging();
					this._OrdemKM = value;
					this.SendPropertyChanged("OrdemKM");
					this.OnOrdemKMChanged();
				}
			}
		}
		
		[Column(Storage="_Volta", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Volta
		{
			get
			{
				return this._Volta;
			}
			set
			{
				if ((this._Volta != value))
				{
					this.OnVoltaChanging(value);
					this.SendPropertyChanging();
					this._Volta = value;
					this.SendPropertyChanged("Volta");
					this.OnVoltaChanged();
				}
			}
		}
		
		[Column(Storage="_Terreno", DbType="NChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string Terreno
		{
			get
			{
				return this._Terreno;
			}
			set
			{
				if ((this._Terreno != value))
				{
					this.OnTerrenoChanging(value);
					this.SendPropertyChanging();
					this._Terreno = value;
					this.SendPropertyChanged("Terreno");
					this.OnTerrenoChanged();
				}
			}
		}
		
		[Column(Storage="_Altimetria", DbType="NChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Altimetria
		{
			get
			{
				return this._Altimetria;
			}
			set
			{
				if ((this._Altimetria != value))
				{
					this.OnAltimetriaChanging(value);
					this.SendPropertyChanging();
					this._Altimetria = value;
					this.SendPropertyChanged("Altimetria");
					this.OnAltimetriaChanged();
				}
			}
		}
		
		[Column(Storage="_Obs", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Obs
		{
			get
			{
				return this._Obs;
			}
			set
			{
				if ((this._Obs != value))
				{
					this.OnObsChanging(value);
					this.SendPropertyChanging();
					this._Obs = value;
					this.SendPropertyChanged("Obs");
					this.OnObsChanged();
				}
			}
		}
		
		[Column(Storage="_IdResultado", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int IdResultado
		{
			get
			{
				return this._IdResultado;
			}
			set
			{
				if ((this._IdResultado != value))
				{
					if (this._Resultado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdResultadoChanging(value);
					this.SendPropertyChanging();
					this._IdResultado = value;
					this.SendPropertyChanged("IdResultado");
					this.OnIdResultadoChanged();
				}
			}
		}
		
		[Association(Name="Resultado_Tempo", Storage="_Resultado", ThisKey="IdResultado", IsForeignKey=true)]
		public Resultado Resultado
		{
			get
			{
				return this._Resultado.Entity;
			}
			set
			{
				Resultado previousValue = this._Resultado.Entity;
				if (((previousValue != value) 
							|| (this._Resultado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resultado.Entity = null;
						previousValue.Tempos.Remove(this);
					}
					this._Resultado.Entity = value;
					if ((value != null))
					{
						value.Tempos.Add(this);
						this._IdResultado = value.IdResultado;
					}
					else
					{
						this._IdResultado = default(int);
					}
					this.SendPropertyChanged("Resultado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
